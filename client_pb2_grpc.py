# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import client_pb2 as client__pb2


class ComposeHandlerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.UpCompose = channel.unary_unary(
        '/ComposeHandler/UpCompose',
        request_serializer=client__pb2.ComposePackage.SerializeToString,
        response_deserializer=client__pb2.ResourceGroupCompose.FromString,
        )
    self.RemoveCompose = channel.unary_unary(
        '/ComposeHandler/RemoveCompose',
        request_serializer=client__pb2.ComposeIdentifier.SerializeToString,
        response_deserializer=client__pb2.Empty.FromString,
        )


class ComposeHandlerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def UpCompose(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RemoveCompose(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ComposeHandlerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'UpCompose': grpc.unary_unary_rpc_method_handler(
          servicer.UpCompose,
          request_deserializer=client__pb2.ComposePackage.FromString,
          response_serializer=client__pb2.ResourceGroupCompose.SerializeToString,
      ),
      'RemoveCompose': grpc.unary_unary_rpc_method_handler(
          servicer.RemoveCompose,
          request_deserializer=client__pb2.ComposeIdentifier.FromString,
          response_serializer=client__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ComposeHandler', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
